from selenium import webdriver
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.chrome.service import Service

from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

import regex as re
import pandas as pd
import math
import time
from bs4 import BeautifulSoup as bs

service = Service(ChromeDriverManager().install())
driver = webdriver.Chrome(service=service)
options = webdriver.ChromeOptions()

options.add_argument('--disable-dev-shm-usage')
#options.add_argument('--headless')
options.add_experimental_option('excludeSwitches', ['enable-logging'])

navegador = webdriver.Chrome(options=options)
wait = WebDriverWait(navegador, 3)

url = "https://www.farmaponte.com.br/saude/medicamentos/?p=182"
navegador.get(url)

num_prodsstr = navegador.find_element ('xpath', '//*[@id="main-wrapper"]/div[1]/div[3]/div[1]/div[2]/div/div[2]').text
index = num_prodsstr.find(' ')
num_prods = num_prodsstr[:index]
ultima_pag = math.ceil(int(num_prods)/20)
pag = 1
lista_ean = []; lista_desconto = []; lista_marca = []; lista_preco_bruto = []; lista_preco_desc = []; lista_nome = []
while (pag <= ultima_pag):
    num_prod = 1
    while (num_prod <= 20):
        try:
            produto = wait.until(EC.element_to_be_clickable((By.XPATH, f'//*[@id="main-wrapper"]/div[1]/div[3]/div[1]/div[2]/div/div[1]/div[{num_prod}]/div/div/div/h2/a'))).click()
        except:
            try:
                produto = wait.until(EC.element_to_be_clickable((By.XPATH, '//*[@id="search"]/div[10]/div/button'))).click()
                produto = wait.until(EC.element_to_be_clickable((By.XPATH, f'//*[@id="main-wrapper"]/div[1]/div[3]/div[1]/div[2]/div/div[1]/div[{num_prod}]/div/div/div/h2/a'))).click()
            except:
                break
        
        try:
            validacao = navegador.find_element ('xpath', '//*[@id="content-product"]/div/div[1]/div/div[3]/form[1]/div[5]/div[1]/div/div/p').text
        except:
            validacao = "produto disponivel"
        else:
            preco_com = preco_sem = "venda sob receita"
        try:
            validacao = navegador.find_element (By.CSS_SELECTOR, '#content-product > div > div.bg-white.rounded.p-3 > div > div.col-12.col-md-6.pl-md-0.product-detail > form.product-form.pt-3 > div.row.mt-sm-3 > div.col-12.col-sm-6.mb-3.mb-sm-0 > div > div > p').text
        except:
            validacao = "produto disponivel"

        if validacao == "Produto IndisponÃ­vel":
            preco_com = preco_sem = "produto indisponivel"
        else:
            validacao = "produto disponivel"
        
        page_content = navegador.page_source
        site = bs(page_content, 'html.parser')
        ean = str(site.find('meta', itemprop='gtin13'))
        ean.split()
        if 'content' in ean:
            ean1 = ean[15:28]
        
        desconto = navegador.find_element ('xpath', '//*[@id="content-product"]/div/div[1]/div/div[3]/form[1]/span/b').text
        
        if desconto == '':
            desconto = "N/A"
            if validacao == "produto disponivel":
                try:
                    preco_sem = navegador.find_element ('xpath', '//*[@id="content-product"]/div/div[1]/div/div[3]/form[1]/div[4]/div[1]/div/div/p[2]/strong').text
                except:
                    preco_sem = navegador.find_element (By.CSS_SELECTOR, ('#content-product > div > div.bg-white.rounded.p-3 > div > div.col-12.col-md-6.pl-md-0.product-detail > form.product-form.pt-3 > div.row.mt-sm-3 > div.col-12.col-sm-6.mb-3.mb-sm-0 > div > div > p.card-installments > strong')).text
                preco_com = "N/A"
        elif validacao == "produto disponivel":
            preco_com = navegador.find_element (By.CSS_SELECTOR, ('#content-product > div > div.bg-white.rounded.p-3 > div > div.col-12.col-md-6.pl-md-0.product-detail > form.product-form.pt-3 > div.row.mt-sm-3 > div.col-12.col-sm-6.mb-3.mb-sm-0 > div > div > p.card-installments > strong')).text
            preco_sem = navegador.find_element (By.CSS_SELECTOR, ('#content-product > div > div.bg-white.rounded.p-3 > div > div.col-12.col-md-6.pl-md-0.product-detail > form.product-form.pt-3 > div.row.mt-sm-3 > div.col-12.col-sm-6.mb-3.mb-sm-0 > div > div > p.unit-price > span')).text
        
        try:
            marca = navegador.find_element ('xpath', '//*[@id="content-product"]/div/div[1]/div/div[3]/form[1]/a').text
        except:
            marca = "N/A"
        nome = navegador.find_element ('xpath', '//*[@id="content-product"]/div/div[1]/div/div[3]/form[1]/h1').text
        
        lista_marca.append(marca); lista_nome.append(nome); lista_preco_bruto.append(preco_sem); lista_preco_desc.append(preco_com); lista_desconto.append(desconto); lista_ean.append(ean1)
        if num_prod <= 20:
            navegador.execute_script("window.history.go(-1)")
        num_prod = num_prod + 1
    if pag < ultima_pag:
        next = wait.until(EC.element_to_be_clickable((By.XPATH, '//*[@id="main-wrapper"]/div[1]/div[3]/div[1]/div[2]/div/ul/li[12]/a'))).click()
    pag = pag + 1
    print( pag + 181)

print(lista_nome, lista_ean, lista_desconto, lista_preco_bruto, lista_preco_desc, lista_marca)
